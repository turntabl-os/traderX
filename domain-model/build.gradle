/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'
    id 'maven-publish'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

group 'traderx'
version '1.0-SNAPSHOT'

sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.11'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'org.morphir:morphir-sdk-core_2.12:0.18.2'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

task compileElm(type: Exec) {
    def morphirCommand = isWindows() ? 'morphir-elm.cmd' : 'morphir-elm'

    commandLine morphirCommand, 'make'
}

task generateScala(type: Exec) {
    def morphirCommand = isWindows() ? 'morphir-elm.cmd' : 'morphir-elm'

    commandLine morphirCommand, 'gen', '-e', '2.13.11', '-o', './src/main/scala'
}

task displayBusiness(type: Exec) {
    def morphirCommand = isWindows() ? 'morphir-elm.cmd' : 'morphir-elm'

    commandLine morphirCommand, 'develop'
}

def static isWindows() {
    return System.properties['os.name'].toLowerCase().contains('win')
}

build{
    dependsOn("compileElm", "generateScala")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}